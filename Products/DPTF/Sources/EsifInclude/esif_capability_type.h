/******************************************************************************
** Copyright (c) 2014 Intel Corporation All Rights Reserved
**
** Licensed under the Apache License, Version 2.0 (the "License"); you may not
** use this file except in compliance with the License.
**
** You may obtain a copy of the License at
**     http://www.apache.org/licenses/LICENSE-2.0
**
** Unless required by applicable law or agreed to in writing, software
** distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
** WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
**
** See the License for the specific language governing permissions and
** limitations under the License.
**
******************************************************************************/

#ifndef _ESIF_CAPABILITY_TYPE_H_
#define _ESIF_CAPABILITY_TYPE_H_

#include "esif.h"

/*
** Capability Type Declarations
*/

#define ENUM_ESIF_CAPABILITY_TYPE(ENUM) \
    ENUM##_VAL(ESIF_CAPABILITY_TYPE_ACTIVE_CONTROL, 0) \
    ENUM##_VAL(ESIF_CAPABILITY_TYPE_CTDP_CONTROL, 1) \
    ENUM##_VAL(ESIF_CAPABILITY_TYPE_CORE_CONTROL, 2) \
    ENUM##_VAL(ESIF_CAPABILITY_TYPE_DISPLAY_CONTROL, 3) \
    ENUM##_VAL(ESIF_CAPABILITY_TYPE_DOMAIN_PRIORITY, 4) \
    ENUM##_VAL(ESIF_CAPABILITY_TYPE_PERF_CONTROL, 5) \
    ENUM##_VAL(ESIF_CAPABILITY_TYPE_POWER_CONTROL, 6) \
    ENUM##_VAL(ESIF_CAPABILITY_TYPE_POWER_STATUS, 7) \
    ENUM##_VAL(ESIF_CAPABILITY_TYPE_TEMP_STATUS, 8) \
    ENUM##_VAL(ESIF_CAPABILITY_TYPE_UTIL_STATUS, 9) \
    ENUM##_VAL(ESIF_CAPABILITY_TYPE_PIXELCLOCK_STATUS, 10) \
    ENUM##_VAL(ESIF_CAPABILITY_TYPE_PIXELCLOCK_CONTROL, 11) \
    ENUM##_VAL(ESIF_CAPABILITY_TYPE_BATTERY_STATUS, 12) \
    ENUM##_VAL(ESIF_CAPABILITY_TYPE_TEMP_THRESHOLD, 13) \
    ENUM##_VAL(ESIF_CAPABILITY_TYPE_RFPROFILE_STATUS, 14) \
    ENUM##_VAL(ESIF_CAPABILITY_TYPE_RFPROFILE_CONTROL, 15) \

enum esif_capability_type {
#ifdef ESIF_ATTR_KERNEL
    ESIF_CAPABILITY_TYPE_ACTIVE_CONTROL             = 0,
    ESIF_CAPABILITY_TYPE_CTDP_CONTROL               = 1,
    ESIF_CAPABILITY_TYPE_CORE_CONTROL               = 2,
    ESIF_CAPABILITY_TYPE_DISPLAY_CONTROL            = 3,
    ESIF_CAPABILITY_TYPE_DOMAIN_PRIORITY            = 4,
    ESIF_CAPABILITY_TYPE_PERF_CONTROL               = 5,
    ESIF_CAPABILITY_TYPE_POWER_CONTROL              = 6,
    ESIF_CAPABILITY_TYPE_POWER_STATUS               = 7,
    ESIF_CAPABILITY_TYPE_TEMP_STATUS                = 8,
    ESIF_CAPABILITY_TYPE_UTIL_STATUS                = 9,
    ESIF_CAPABILITY_TYPE_PIXELCLOCK_STATUS          = 10,
    ESIF_CAPABILITY_TYPE_PIXELCLOCK_CONTROL         = 11,
    ESIF_CAPABILITY_TYPE_BATTERY_STATUS             = 12,
    ESIF_CAPABILITY_TYPE_TEMP_THRESHOLD             = 13,
    ESIF_CAPABILITY_TYPE_RFPROFILE_STATUS           = 14,
    ESIF_CAPABILITY_TYPE_RFPROFILE_CONTROL          = 15
#else
    ENUM_ESIF_CAPABILITY_TYPE(ENUMDECL)
#endif
};

// Implement these if they are needed
extern enum esif_capability_type esif_capability_type_string2enum(esif_string str);
extern esif_string esif_capability_type_enum2string(enum esif_capability_type type);

static ESIF_INLINE esif_string esif_capability_type_str(enum esif_capability_type type)
{
#define CREATE_CAPABILITY_TYPE(ct) case ct: str = (esif_string) #ct; break;
#define CREATE_CAPABILITY_TYPE_VAL(ct,VAL) case ct: str = (esif_string) #ct; break;

    esif_string str = (esif_string)ESIF_NOT_AVAILABLE;
    switch (type) {
#ifdef ESIF_ATTR_KERNEL
    CREATE_CAPABILITY_TYPE(ESIF_CAPABILITY_TYPE_ACTIVE_CONTROL)
    CREATE_CAPABILITY_TYPE(ESIF_CAPABILITY_TYPE_CTDP_CONTROL)
    CREATE_CAPABILITY_TYPE(ESIF_CAPABILITY_TYPE_CORE_CONTROL)
    CREATE_CAPABILITY_TYPE(ESIF_CAPABILITY_TYPE_DISPLAY_CONTROL)
    CREATE_CAPABILITY_TYPE(ESIF_CAPABILITY_TYPE_DOMAIN_PRIORITY)
    CREATE_CAPABILITY_TYPE(ESIF_CAPABILITY_TYPE_PERF_CONTROL)
    CREATE_CAPABILITY_TYPE(ESIF_CAPABILITY_TYPE_POWER_CONTROL)
    CREATE_CAPABILITY_TYPE(ESIF_CAPABILITY_TYPE_POWER_STATUS)
    CREATE_CAPABILITY_TYPE(ESIF_CAPABILITY_TYPE_TEMP_STATUS)
    CREATE_CAPABILITY_TYPE(ESIF_CAPABILITY_TYPE_UTIL_STATUS)
    CREATE_CAPABILITY_TYPE(ESIF_CAPABILITY_TYPE_PIXELCLOCK_STATUS)
    CREATE_CAPABILITY_TYPE(ESIF_CAPABILITY_TYPE_PIXELCLOCK_CONTROL)
    CREATE_CAPABILITY_TYPE(ESIF_CAPABILITY_TYPE_BATTERY_STATUS)
    CREATE_CAPABILITY_TYPE(ESIF_CAPABILITY_TYPE_TEMP_THRESHOLD)
    CREATE_CAPABILITY_TYPE(ESIF_CAPABILITY_TYPE_RFPROFILE_STATUS)
    CREATE_CAPABILITY_TYPE(ESIF_CAPABILITY_TYPE_RFPROFILE_CONTROL)
#else
        ENUM_ESIF_CAPABILITY_TYPE(CREATE_CAPABILITY_TYPE)
#endif
    }
    return str;
}

#define ESIF_CAPABILITY_ACTIVE_CONTROL 0x1
#define ESIF_CAPABILITY_CTDP_CONTROL 0x2
#define ESIF_CAPABILITY_CORE_CONTROL 0x4
#define ESIF_CAPABILITY_DISPLAY_CONTROL 0x8
#define ESIF_CAPABILITY_DOMAIN_PRIORITY 0x10
#define ESIF_CAPABILITY_PERF_CONTROL 0x20
#define ESIF_CAPABILITY_POWER_CONTROL 0x40
#define ESIF_CAPABILITY_POWER_STATUS 0x80
#define ESIF_CAPABILITY_TEMP_STATUS 0x100
#define ESIF_CAPABILITY_UTIL_STATUS 0x200
#define ESIF_CAPABILITY_PIXELCLOCK_STATUS 0x400
#define ESIF_CAPABILITY_PIXELCLOCK_CONTROL 0x800
#define ESIF_CAPABILITY_BATTERY_STATUS 0x1000
#define ESIF_CAPABILITY_TEMP_THRESHOLD 0x2000
#define ESIF_CAPABILITY_RFPROFILE_STATUS 0x4000
#define ESIF_CAPABILITY_RFPROFILE_CONTROL 0x8000

#endif